"""
The schema's root query type.
"""
type Query {
  """
  Returns the currently logged in user, null if the user is not logged in.
  """
  user: User

  """
  Returns the list of users regstered.
  """
  users: [User!]!
}

"""
The schema's root mutation type.
"""
type Mutation {
  """
  Adds the newly created user when valid information provided,
  An email address should not exist already.

  parameters
    email:
      User's email address
    name:
      User's name
    cell:
      User's cell number
    password:
      User's password

  Returns the SuccessMessage
  """
  signup(
    """
    User's email address
    """
    email: String!
    """
    User's name
    """
    name: String!
    """
    User's cell number
    """
    cell: String!
    """
    User's password
    """
    password: String!
  ): User!

  """
  Updates the user information when valid information provided,
  The username or an email address should not exist already.

  parameters
    cell:
      User's contact number
    email:
      User's email address
    image:
      User's url for the profile image
    name:
      User's name
    password:
      User's current password
    newpassword:
      User's new password
  Returns the SuccessMessage
  """
  updateUser(
    cell: String
    email: String
    image: String
    name: String
    password: String!
    newPassword: String
  ): User!
}

type User {
  id: ID!
  cell: String!
  email: String!
  image: String
  name: String!
  roles: [Role!]!
}

enum Role {
  ADMIN
  DRIVER
  PASSANGER
}
